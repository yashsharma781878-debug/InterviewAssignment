public class ContactTriggerHandler {
    
    public static void handleAfterInsert(List<Contact> contactList) {
        Set<Id> accountIds = new Set<Id>();
        for (Contact contact : contactList) {
            if (contact.AccountId != null) {
                accountIds.add(contact.AccountId); 
            }
        }
        if (!accountIds.isEmpty()) {
            updateContactsCount(accountIds);
        }
    }

    public static void handleAfterUpdate(Map<Id, Contact> oldContactData, List<Contact> newContactData) {
        Set<Id> accountIds = new Set<Id>();
        for (Contact newContact : newContactData) {
            Contact oldContact = oldContactData.get(newContact.Id);
            if (newContact.AccountId != oldContact.AccountId) {
                if (newContact.AccountId != null) {
                    accountIds.add(newContact.AccountId);
                }
                if (oldContact.AccountId != null) {
                    accountIds.add(oldContact.AccountId);
                }
            }
        }
        if (!accountIds.isEmpty()) {
            updateContactsCount(accountIds);
        }
    }

    public static void handleAfterDelete(List<Contact> contactList) {
        Set<Id> accountIds = new Set<Id>();
        for (Contact contact : contactList) {
            if (contact.AccountId != null) {
                accountIds.add(contact.AccountId); 
            }
        }

        if (!accountIds.isEmpty()) {
            updateContactsCount(accountIds);
        }
    }

    private static void updateContactsCount(Set<Id> accountIds) {
        Map<Id, Integer> accountContactCount = new Map<Id, Integer>();
        
        // Aggregate query to count the number of contacts per account
        for (AggregateResult ar : [
            SELECT AccountId, COUNT(Id) countId
            FROM Contact 
            WHERE AccountId IN :accountIds 
            GROUP BY AccountId
        ]) {
            accountContactCount.put((Id)ar.get('AccountId'), (Integer)ar.get('countId'));
        }

        List<Account> accountsToUpdate = new List<Account>();
        for (Id accountId : accountContactCount.keySet()) {
            Account accountToUpdate = new Account(
                Id = accountId,
                Number_of_Contacts__c = accountContactCount.get(accountId)
            );
            accountsToUpdate.add(accountToUpdate);
        }

        if (!accountsToUpdate.isEmpty()) {
            update accountsToUpdate;
        }
    }

}
